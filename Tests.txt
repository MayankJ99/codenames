Tests.Txt fileFormat :-Functionality -> Method -> Test CaseAll Methods are in the code package. All Tests are in the Tests package1. Defines a Board class contains 25 Location instances [6 points] --> Implemented as a whole class on its own --> No test needed2. Correctly reads codenames from a file namedÊGameWords.txtÊand stores them in aÊList --> CodeNamesFileReader(String) --> CodeNamesListTest()3. CreatesÊListÊcontaining 25 distinct codenames selected at randomÊ--> Select25() --> Check_Select25()4. CreatesÊListÊcontaining randomly generated assignments for each of the 9 Red Agents, 8 Blue Agents, 7 Innocent Bystanders, and 1 Assassin --> RandomAssign() --> Check_randomAssign5. When game started, it is Red team's move and each ofÊBoard's 25ÊLocationÊinstances is assigned a codename, Person, and      is Not Revealed --> GameStart() --> Check_GameStart()6. Method defined which correctly returns if a clue is legal or illegal --> CheckClue(String) --> Check_CheckClue()7. Method defined which decrements the count, updates a Location when the Location's codename was selected, and returns if the Location contained the current team's Agent --> UpdateLocation(String) AND UpdateLocation(Location) --> Check_UpdateLocationString() AND Check_UpdateLocationLoc()8. Method defined which correctly returns whether or not theÊBoardÊis in one of the winning statesÊ--> CheckGameState() --> Check_CheckGameState()9. Method defined which correctly returns which team did not lose (i.e., win) when the Assassin was revealedÊ--> WinTeam() --> Check_WinTeam()